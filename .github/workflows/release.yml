name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm exec semantic-release

      - name: Build project
        run: pnpm run build

      - name: Setup secrets for Development
        if: success()
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          pnpm install -g wrangler
          echo "${{ secrets.RAG_DB_HOST }}" | wrangler secret put RAG_DB_HOST --env development
          echo "${{ secrets.RAG_DB_PORT }}" | wrangler secret put RAG_DB_PORT --env development
          echo "${{ secrets.RAG_DB_DATABASE }}" | wrangler secret put RAG_DB_DATABASE --env development
          echo "${{ secrets.RAG_DB_USER }}" | wrangler secret put RAG_DB_USER --env development
          echo "${{ secrets.RAG_DB_PASSWORD }}" | wrangler secret put RAG_DB_PASSWORD --env development
          echo "${{ secrets.RAG_DB_SSLMODE }}" | wrangler secret put RAG_DB_SSLMODE --env development
          echo "${{ secrets.TELEGRAM_BOT_URL }}" | wrangler secret put TELEGRAM_BOT_URL --env development

      - name: Deploy to Development
        if: success()
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: pnpm run deploy:dev

      - name: Setup secrets for Production
        if: success()
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "${{ secrets.RAG_DB_HOST }}" | wrangler secret put RAG_DB_HOST --env production
          echo "${{ secrets.RAG_DB_PORT }}" | wrangler secret put RAG_DB_PORT --env production
          echo "${{ secrets.RAG_DB_DATABASE }}" | wrangler secret put RAG_DB_DATABASE --env production
          echo "${{ secrets.RAG_DB_USER }}" | wrangler secret put RAG_DB_USER --env production
          echo "${{ secrets.RAG_DB_PASSWORD }}" | wrangler secret put RAG_DB_PASSWORD --env production
          echo "${{ secrets.RAG_DB_SSLMODE }}" | wrangler secret put RAG_DB_SSLMODE --env production
          echo "${{ secrets.TELEGRAM_BOT_URL }}" | wrangler secret put TELEGRAM_BOT_URL --env production

      - name: Deploy to Production
        if: success()
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: pnpm run deploy:prod


